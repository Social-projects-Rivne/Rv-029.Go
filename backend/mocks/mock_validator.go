// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Social-projects-Rivne/Rv-029.Go/backend/utils/validator (interfaces: InputValidation)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	http "net/http"
	reflect "reflect"
)

// MockInputValidation is a mock of InputValidation interface
type MockInputValidation struct {
	ctrl     *gomock.Controller
	recorder *MockInputValidationMockRecorder
}

// MockInputValidationMockRecorder is the mock recorder for MockInputValidation
type MockInputValidationMockRecorder struct {
	mock *MockInputValidation
}

// NewMockInputValidation creates a new mock instance
func NewMockInputValidation(ctrl *gomock.Controller) *MockInputValidation {
	mock := &MockInputValidation{ctrl: ctrl}
	mock.recorder = &MockInputValidationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInputValidation) EXPECT() *MockInputValidationMockRecorder {
	return m.recorder
}

// Validate mocks base method
func (m *MockInputValidation) Validate(arg0 *http.Request) error {
	ret := m.ctrl.Call(m, "Validate", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Validate indicates an expected call of Validate
func (mr *MockInputValidationMockRecorder) Validate(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MockInputValidation)(nil).Validate), arg0)
}
