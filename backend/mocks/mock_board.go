// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Social-projects-Rivne/Rv-029.Go/backend/models (interfaces: BoardStorage)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockBoardStorage is a mock of BoardStorage interface
type MockBoardStorage struct {
	ctrl     *gomock.Controller
	recorder *MockBoardStorageMockRecorder
}

// MockBoardStorageMockRecorder is the mock recorder for MockBoardStorage
type MockBoardStorageMockRecorder struct {
	mock *MockBoardStorage
}

// NewMockBoardStorage creates a new mock instance
func NewMockBoardStorage(ctrl *gomock.Controller) *MockBoardStorage {
	mock := &MockBoardStorage{ctrl: ctrl}
	mock.recorder = &MockBoardStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBoardStorage) EXPECT() *MockBoardStorageMockRecorder {
	return m.recorder
}

// Insert mocks base method
func (m *MockBoardStorage) Insert() error {
	ret := m.ctrl.Call(m, "Insert")
	ret0, _ := ret[0].(error)
	return ret0
}

// Insert indicates an expected call of Insert
func (mr *MockBoardStorageMockRecorder) Insert() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Insert", reflect.TypeOf((*MockBoardStorage)(nil).Insert))
}
